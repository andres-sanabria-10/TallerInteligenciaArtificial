// test-webhook.js - Script para verificar configuraci√≥n
const axios = require('axios');

async function verificarWebhook() {
  try {
    console.log('üîç Verificando configuraci√≥n del webhook...');
    
    // 1. Verificar que wa-automate est√© corriendo
    const healthCheck = await axios.get('http://localhost:3200/');
    console.log('‚úÖ wa-automate est√° corriendo en puerto 3200');
    
    // 2. Obtener informaci√≥n del cliente
    const clientInfo = await axios.get('http://localhost:3200/getMe');
    console.log('üì± WhatsApp conectado:', clientInfo.data.me._serialized);
    
    // 3. Verificar configuraci√≥n del webhook (si es posible)
    try {
      const webhookInfo = await axios.get('http://localhost:3200/webhook');
      console.log('üîó Webhook configurado:', webhookInfo.data);
    } catch (error) {
      console.log('‚ÑπÔ∏è No se pudo verificar webhook (normal si se configur√≥ desde CLI)');
    }
    
    // 4. Probar conexi√≥n con tu aplicaci√≥n Node.js
    const appTest = await axios.get('http://localhost:3001/');
    console.log('‚úÖ Tu aplicaci√≥n Node.js est√° corriendo:', appTest.data.message);
    
    console.log('\nüéØ Configuraci√≥n correcta:');
    console.log('- wa-automate: http://localhost:3200 ‚úÖ');
    console.log('- Tu aplicaci√≥n: http://localhost:3001 ‚úÖ');
    console.log('- Webhook configurado para enviar mensajes a tu app ‚úÖ');
    
  } catch (error) {
    console.error('‚ùå Error en la verificaci√≥n:', error.message);
    
    if (error.message.includes('ECONNREFUSED')) {
      if (error.config?.url?.includes('3200')) {
        console.log('üí° Soluci√≥n: Ejecuta wa-automate con: npx @open-wa/wa-automate -w \'TU_NGROK_URL/whatsapp/webhook\'');
      } else if (error.config?.url?.includes('3001')) {
        console.log('üí° Soluci√≥n: Ejecuta tu aplicaci√≥n Node.js con: npm start');
      }
    }
  }
}

// Ejecutar verificaci√≥n
verificarWebhook();